/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoADatos.BrigadaData;
import Entidades.Brigada;
import Entidades.Especialidad;
import java.awt.Container;

import java.util.ArrayList;
import java.util.Iterator;

import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author niqog
 */
public class BrigadasView1 extends javax.swing.JInternalFrame {

    private final DefaultTableModel modelo = new DefaultTableModel();
    private ArrayList<Brigada> brigadas = new ArrayList<>();
    private final BrigadaData bData = new BrigadaData();

    public BrigadasView1() {
        brigadas = (ArrayList<Brigada>) bData.listarBrigadasLibres();
        initComponents();
        this.setTitle("LISTAR BRIGADAS");
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jRBTodasLasBrigadas = new javax.swing.JRadioButton();
        jRBlibres = new javax.swing.JRadioButton();
        jRBBrigadasAsignadas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBAdmBrigadas = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 34)); // NOI18N
        jLabel1.setText("Listar Brigadas");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jRBTodasLasBrigadas.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        jRBTodasLasBrigadas.setText("Todas Las Brigadas");
        jRBTodasLasBrigadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBTodasLasBrigadasMouseClicked(evt);
            }
        });

        jRBlibres.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        jRBlibres.setText("Brigadas libres");
        jRBlibres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBlibresMouseClicked(evt);
            }
        });

        jRBBrigadasAsignadas.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        jRBBrigadasAsignadas.setText("Brigadas Asignadas");
        jRBBrigadasAsignadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRBBrigadasAsignadasMouseClicked(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jBAdmBrigadas.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        jBAdmBrigadas.setText("Administracion Brigadas");
        jBAdmBrigadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdmBrigadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jRBTodasLasBrigadas, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRBlibres)
                .addGap(40, 40, 40)
                .addComponent(jRBBrigadasAsignadas)
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jBAdmBrigadas, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBTodasLasBrigadas)
                    .addComponent(jRBlibres)
                    .addComponent(jRBBrigadasAsignadas))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jBAdmBrigadas, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRBTodasLasBrigadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBTodasLasBrigadasMouseClicked
// Deseleccionar los otros dos radio buttons
        jRBlibres.setSelected(false);
        jRBBrigadasAsignadas.setSelected(false);

        List<Brigada> brigadas = bData.listarBrigadasLibres();
        modelo.setRowCount(0);
        //for (Brigada brigada : brigadas) {
        // modelo.addRow(new Object[]{brigada.getCodBrigada(), brigada.getNombre_br(), brigada.getEspecialidad()});
        llenarTabla((ArrayList<Brigada>) brigadas);
    }//GEN-LAST:event_jRBTodasLasBrigadasMouseClicked

    private void jRBlibresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBlibresMouseClicked
        // Deseleccionar los otros dos radio buttons
        jRBTodasLasBrigadas.setSelected(false);
        jRBBrigadasAsignadas.setSelected(false);

        List<Brigada> brigadas = bData.listarBrigadasLibresPorEspecialidad(Especialidad.INCENDIOS);
        modelo.setRowCount(0);
        //for (Brigada brigada : brigadas) {
        //  modelo.addRow(new Object[]{brigada.getCodBrigada(), brigada.getNombre_br(), brigada.getEspecialidad()});
        llenarTabla((ArrayList<Brigada>) brigadas);
    }//GEN-LAST:event_jRBlibresMouseClicked

    private void jRBBrigadasAsignadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRBBrigadasAsignadasMouseClicked
        // Deseleccionar los otros dos radio buttons
        jRBTodasLasBrigadas.setSelected(false);
        jRBlibres.setSelected(false);

        List<Brigada> brigadas = bData.obtenerBrigadasAsignadas();
        modelo.setRowCount(0);
        // for (Brigada brigada : brigadas) {
        //modelo.addRow(new Object[]{brigada.isActivo(), brigada.getNombre_br(), brigada.getEspecialidad(), brigada.isLibre()});
        llenarTabla((ArrayList<Brigada>) brigadas);
    }//GEN-LAST:event_jRBBrigadasAsignadasMouseClicked

    private void jBAdmBrigadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdmBrigadasActionPerformed
        Container parent = this.getParent();
        if (parent instanceof JDesktopPane) {
            JDesktopPane desktopPane = (JDesktopPane) parent;

            // Luego, puedes agregar tu segundo JInternalFrame al JDesktopPane
            AdmBrigada briadm = new AdmBrigada();
            desktopPane.add(briadm);
            briadm.setVisible(true);
        }
    }//GEN-LAST:event_jBAdmBrigadasActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdmBrigadas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRBBrigadasAsignadas;
    private javax.swing.JRadioButton jRBTodasLasBrigadas;
    private javax.swing.JRadioButton jRBlibres;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void limpiarTabla() {

        modelo.setRowCount(0);
    }

    public void armarCabecera() {
        //cuartel , especialidad, BRIGADA
        modelo.addColumn("ESTADO");
        modelo.addColumn("NOMBRE DE BRIGADA");
        modelo.addColumn("ESPECILIDAD");
        modelo.addColumn("LIBRE");

        jTable1.setModel(modelo);

        jTable1.getColumnModel().getColumn(0).setPreferredWidth(10); // ESTADO
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(50); // NOMBRE DE BRIGADA
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(50); // ESPECIALIDAD
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(50); // LIBRE
        
        // Hacer la tabla no editable
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            Class<?> columnClass = jTable1.getColumnClass(i);
            jTable1.setDefaultEditor(columnClass, null);
        }
    }

    /*public void llenarTabla(ArrayList<Brigada> brigadast) {
        modelo.setRowCount(0);

        for (Brigada brigada : brigadast) {
            Object[] rowData = {
                brigada.isActivo(),
                brigada.getNombre_br(),
                brigada.getEspecialidad(),
                brigada.isLibre()
        };
            modelo.addRow(rowData);
        }
}
     */
    public void llenarTabla(ArrayList<Brigada> brigadast) {
        modelo.setRowCount(0);

        for (Brigada brigada : brigadast) {
            Object[] rowData = {
                brigada.isActivo() ? "Activo" : "Inactivo", // Si es true, agrega "Activo". Si es false, agrega "Inactivo".
                brigada.getNombre_br(),
                brigada.getTipo(),
                brigada.isLibre() ? "Si" : "No" // Si es true, agrega "Si". Si es false, agrega "No".
            };
            modelo.addRow(rowData);
        }
    }
}
